var relearn_lti_index=[{breadcrumb:"",description:"Welcome to CIS 598!",modified:"2023-08-10T14:35:04-05:00",tags:[],title:"Introduction",uri:"/cis598/0-introduction/index.html"},{breadcrumb:"Introduction",description:`CIS 596 - Entrepreneurial Computer Science Project - Fall 2025 CIS 598 - Computer Science Project - Fall 2025 Previous Versions
Instructor Contact Information Instructor: Dr. Dan Andresen (dan AT ksu DOT edu) Office: DUE 2184 Phone: (785) 532-6350 Website: https://people.cs.ksu.edu/~dan/ Office Hours: TBA
Instructor: Mr. Russell Feldhausen (russfeld AT ksu DOT edu) Office: DUE 2213, but I mostly work remotely from Kansas City, MO Phone: (785) 292-3121 (Call/Text) Website: https://russfeld.me Virtual Office Hours: By appointment via Zoom. Book time to meet with me Preferred Methods of Communication: Email: Students should email questions directly to the instructors. We will try to respond within one business day. Chat: You may find instructors online via the CS department Discord server and Microsoft Teams. We will try to respond when we can, but if you don’t get a response please email us. Phone/Text: Emergencies only! We will do our best to respond as quickly as we can. Prerequisites CIS 596: CIS 560, ENTRP 340 and senior standing in computer science. Students may enroll in CIS courses only if they have earned a grade of C or better for each prerequisite to those courses. CIS 598: CIS 560 and senior standing in computer science. Students may enroll in CIS courses only if they have earned a grade of C or better for each prerequisite to those courses. Course Overview Directed studies: selection, investigation and report on some topic not covered in prior courses; may include an implementation and/or experimentation component; may be done in collaboration with other students. Completion of a final report with literature review and project evaluation.`,modified:"2025-08-19T13:46:12-05:00",tags:[],title:"Fall 2025 Syllabus",uri:"/cis598/0-introduction/01-syllabus/index.html"},{breadcrumb:"Resources",description:`This page is a collection of general links that may be useful. Email the instructors to request any additions.
System Design Textbook - a great writeup on system design, starting from the basics of networking and the internet through high availability systems and case studies. This information is very useful as you get closer to having a product ready for release and deployment, but may also help inform your early design stage as well.`,modified:"2025-01-13T16:14:27-06:00",tags:[],title:"Links",uri:"/cis598/a-resources/01-links/index.html"},{breadcrumb:"Resources",description:`This page contains links to videos and some comments from the CIS 748: Advanced Software Management course taught by Dr. DeLoach.
YouTube Channel - contains all videos.
Video Topics Below is a quick guide to the various videos and their relevance to CIS 598 projects. Feel free to use this to help you find a particular video or topic.
Chapter 1: Videos 1a and 1b talk mostly about project teams. 1a also covers work products. 1c talks about different approaches to a project, and may be helpful during initial project planning stages. Chapter 2: Video 2b gives some useful information about software development processes. 2c is some good historical information as well. Videos 2d and 2e are super useful since they cover both iterative and agile development, which is the most common development process employed by students in this course. Chapter 3: The videos from chapter 3 are useful during the early parts of the project and give lots of information about how to determine the features and requirements for a project. Watching these videos early on may help you ideate around your project. Chapter 4: Chapter 4 is mostly related to large software projects and may not be directly relevant, but is still useful in some areas. Chapter 5: Chapter 5 covers large project management, which may be a bit outside the scope of CIS 598 but is interesting if you plan on joining or managing a large software team in the future. Chapter 6: The content in chapter 6 goes deep into project estimation, and is probably too deep for CIS 598. However, some of the content may help give you a few ideas for how to judge the approximate scope and scale of your project as you get further into planning. Chapter 7: I recommend watching some of the content in Chapter 7 on time management and evaluating progress about halfway through the semester. They can be a good prompt for reflection as you reach the halfway point and look ahead to the last part of the project. Chapter 8: Chapter 8 is mostly on value analysis, which is not really relevant to CIS 598. Chapter 9: Likewise, Chapter 9 mostly covers risk management, which is probably not relevant to most CIS 598 projects.`,modified:"2023-01-10T18:37:41-06:00",tags:[],title:"CIS 748 Videos",uri:"/cis598/a-resources/02-cis748-videos/index.html"},{breadcrumb:"Introduction",description:`Slides
The major outcome for this course is a project that demonstrates your skills in computer science, software development, and other areas relevant to your chosen degree program. This page provides an overview that will help you get started on your project.
Research Topic Starting in Spring 2023, we now have a special track for topics that fall generally under the heading of “research” instead of a software development project. This includes projects that may have a significant experimental component where the focus is less on developing a software project and more about creating software to support a research task. If you feel that your project fits this description, you should skip to the Research Topic page.`,modified:"2024-05-29T15:40:21-05:00",tags:[],title:"Getting Started",uri:"/cis598/0-introduction/02-getting-started/index.html"},{breadcrumb:"Introduction",description:`Every two weeks throughout the semester, you are expected to do the following:
Meet with your project advisor, either in person or via Zoom, to provide them with a clear update on your project. Ideally, you should be showing them code or working prototypes, not just a quick verbal update. They are here to provide help but need to know exactly what is going on in your project. Discuss issues, questions, and next steps with your advisor during the meeting. Record the time worked on the project and tasks completed in Clockify. You should record your time at least weekly, but we encourage you to record time on a daily basis. Update the task board for your project in GitHub. Commit your current code to the GitHub Classroom repository for your project. You may also use a secondary repository if you would like, but your code must be accessible in the GitHub Classroom repository unless other arrangements have been made (i.e. you are working on a project for a company and storing the code in their systems). Fill out the biweekly survey before the due date.`,modified:"2023-08-07T11:56:04-05:00",tags:[],title:"Weekly Work",uri:"/cis598/0-introduction/02-weekly-work/index.html"},{breadcrumb:"Introduction",description:`During the first half of the semester, each student will be scheduled to give a Overview & Requirements Presentation related to the project.
Presentation Outline The presentation should be roughly 8 minutes in length, and cover the following topics:
A brief overview of the project. NEW A small set (2-3) of top level use cases for the project. These use cases should clearly lead to the requirements in the next bullet point. These use cases will inform the testing plan in the next presentation. A discussion of the requirements for each phase of the project. These requirements will inform the overall design of the project in the next presentation. A proposed timeline for project completion. The first three items roughly correspond to the two initial artifacts discussed on the previous page. The timeline should give rough estimates on when each feature or group of features should be completed.`,modified:"2023-08-07T11:56:04-05:00",tags:[],title:"Presentation 1",uri:"/cis598/0-introduction/03-presentation-1/index.html"},{breadcrumb:"Resources",description:`This is a presentation tips video recorded during the Fall 2022 semester.
Edited Transcript Hello, everyone, I wanted to take a few minutes to record a short video to give you some tips and tricks of things that you can do to improve your presentations for the second round of presentations. Most of these comments are from things that Dr. DeLoach, Dr. Lang and I wrote down on the comment sheets for all of you, those should all be uploaded to Canvas. And if you don’t see that, let me know. And I can find your comment sheet and make sure it gets attached to the comments on canvas. But what I’m going to do is I’m going to go through a few slides examples and talk about a few things that we really noticed in these presentations that are things that you can work on to improve for the next time around.`,modified:"2022-10-13T10:51:01-05:00",tags:[],title:"Presentation Tips",uri:"/cis598/a-resources/03-presentation-tips/index.html"},{breadcrumb:"Introduction",description:`During the second half of the semester, each student will be scheduled to give a Design Presentation related to the project.
Presentation Outline The presentation should be roughly 8 minutes in length, and cover the following topics:
The chosen design for the project. The chosen design should clearly reflect the overall requirements listed in the previous presentation. A deep overview of design diagrams relevant to the project: UML Diagrams (Class Diagrams, Sequence Diagrams, etc.) Database Entity Relationship Diagrams API Documentation Diagrams UI Mockups & Diagrams Sitemaps for Websites A discussion of how the project will be tested NEW These tests should clearly align with the use cases listed in the first presentation. Presentation Diagrams While the focus of this presentation is the design of your project, you don’t need to include an excruciating level of detail in your design diagrams. This makes them very difficult to see and understand in your presentation, and represents a large amount of unnecessary effort on your part. Some suggestions:`,modified:"2023-08-07T11:56:04-05:00",tags:[],title:"Presentation 2",uri:"/cis598/0-introduction/04-presentation-2/index.html"},{breadcrumb:"Resources",description:`This is a video exploring GitHub Projects & Clockify Time Tracking for Spring 2023
Edited Transcript Hello, in this video, I’m going to talk through a bit of the process of doing time tracking in CIS 598, as well as doing some project management using GitHub, through the GitHub projects interface. First and foremost, what I’ve pulled up is Clockify, I’ve invited everybody in the class to Clockify this semester for our time tracking. Clockify is a free application that you can use to keep track of what you’re working on. And I think it has some really useful features that will make this class go a lot faster. So when you first log in to Clockify you’ll be able to select both the timesheet and the time tracker. The timesheet is pretty simple. It’s a traditional timesheet where you list all your projects, and then list how much time that you spent on those. If you want to do that, that’s fine.`,modified:"2023-01-25T10:50:19-06:00",tags:[],title:"Projects & Time Tracking",uri:"/cis598/a-resources/04-projects-time/index.html"},{breadcrumb:"Introduction",description:`At the end of the semester, each student will give a public Final Presentation that presents all aspects of the completed project.
Overview The presentation should be roughly 30-45 minutes in length, and cover all aspects of the project. A recommended outline is below:
Introduction Background & Related Work Project Requirements Design Documents Project Implementation (Languages, Frameworks, Code Structure) Testing & Evaluation Packaging & Deployment (if applicable) Live Demo Future Work Conclusion Q&A Scheduling Final presentations are typically scheduled during the last week of the semester (sometimes referred to as “dead week”) or finals week. You should schedule your presentation in consultation with your advisor, since they are required to attend and grade your project.`,modified:"2022-07-26T15:38:49-05:00",tags:[],title:"Final Presentation",uri:"/cis598/0-introduction/05-final-presentation/index.html"},{breadcrumb:"Introduction",description:`At the end of the semester, you’ll need to submit all of your project artifacts and information for grading. Here is a helpful checklist of everything that should be submitted:
Initial Writeup & Feature List (collected via Canvas early in the semester) First Presentation (collected via Canvas when it was presented) Second Presentation (collected via Canvas when it was presented) Advertisement Materials (collected via Canvas before final presentation) All Code & Related Resources Pushed to GitHub Classroom Repository Repository should include a README.md that briefly describes how to compile/run/use the project. Repository should also include final presentation materials (slides, etc.) Completed Time Log (collected via Canvas at the end of the semester) Completed Release Information (collected via Canvas at the end of the semester) Your advisor will also submit feedback on your final project presentation and artifacts. The course instructors will reach out to advisors to collect this information, so students don’t have to do anything for this step.`,modified:"2022-07-26T15:38:49-05:00",tags:[],title:"Final Artifacts",uri:"/cis598/0-introduction/06-artifacts/index.html"},{breadcrumb:"Introduction",description:`This course includes a special project track for projects that are considered more “research” than purely software development. Some examples:
Exploring how to use artificial intelligence to play a simulated game or recognize images Developing a software tool to interface with lab equipment that requires a large amount of trial and error Writing a tool that uses data science techniques to analyze data and answer a question or hypothesis Developing a new educational software tool, where the major focus of the project is collecting user feedback and analyzing results to continuously improve the software. To be truly considered research, your project generally must conform to these requirements:`,modified:"2023-01-12T13:29:51-06:00",tags:[],title:"Research Project",uri:"/cis598/0-introduction/07-research/index.html"},{breadcrumb:"",description:"Helpful Resources!",modified:"2023-08-10T14:35:04-05:00",tags:[],title:"Resources",uri:"/cis598/a-resources/index.html"},{breadcrumb:"",description:"",modified:"0001-01-01T00:00:00+00:00",tags:[],title:"Categories",uri:"/cis598/categories/index.html"},{breadcrumb:"",description:`This is the textbook for CIS 598 - Computer Science Project.
Course Description: Directed studies: selection, investigation and report on some topic not covered in prior courses; may include an implementation and/or experimentation component; may be done in collaboration with other students. Completion of a plan, two reviews, and a final report with literature review and project evaluation.
Prerequisite: CIS 560 and senior standing in computer science. Students may enroll in CIS courses only if they have earned a grade of C or better for each prerequisite to those courses.`,modified:"2023-08-10T14:35:04-05:00",tags:[],title:"CIS 598 Textbook",uri:"/cis598/index.html"},{breadcrumb:"",description:"",modified:"0001-01-01T00:00:00+00:00",tags:[],title:"Tags",uri:"/cis598/tags/index.html"}]